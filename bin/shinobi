#!/usr/bin/env ruby
$:.unshift(File.expand_path("../../lib", __FILE__))

require "yaml"
require "shinobi"
require "optparse"

options = {:upgrade => true}
OptionParser.new do |opts|
  opts.banner = "Usage: shinobi [options] config"

  opts.on("-u", "--update config_file", "Update the configuration file from the one specified") do |u|
    options[:update] = u
  end
  
  opts.on("--upgrade", "Upgrade the configuration file from NINJA") do |u|
    options[:upgrade] = u
  end
  
  opts.on("--create", "Create and install the configuration file from NINJA") do |u|
    options[:create] = u
  end
end.parse!


config = ARGV[0]

if options[:upgrade] || options[:create]
  fetch = Shinobi.fetch
  File.open(config, "w") { |file| file.write(YAML.dump(fetch)) }
  
  if options[:create]
    fetch.keys.each { |k| Shinobi.install(k, fetch[k]) }
  end
elsif options[:update]
  nascent = YAML.load(File.read(options[:update]))
  saved = YAML.load(File.read(config))
  
  to_be_removed = saved.keys - nascent.keys
  to_be_added = nascent.keys - saved.keys
  
  to_be_removed.each { |k| Shinobi.uninstall(k) }
  to_be_added.each { |k| Shinobi.install(k, nascent[k]) }
  
  File.open(config, "w") { |file| file.write(YAML.dump(nascent)) }
end